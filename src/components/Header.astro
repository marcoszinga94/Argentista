---
const currentPath = Astro.url.pathname;

const navItems = [
  { href: "/", label: "Inicio" },
  { href: "/dolar", label: "D贸lar" },
  { href: "/inflacion", label: "Inflaci贸n" },
];

const fetchDollarPrices = async () => {
  try {
    const response = await fetch("https://dolarapi.com/v1/dolares");
    if (!response.ok) {
      throw new Error("No se pudo obtener la informaci贸n del d贸lar");
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.log(error.message);
  }
};
fetchDollarPrices();
---

<header
  class="[grid-area:header] sticky top-0 bg-blue-600 text-white shadow-lg"
>
  <nav class="max-w-6xl mx-auto">
    <div class="flex flex-col sm:flex-row items-center justify-between p-4">
      <div class="mb-4 sm:mb-0">
        <a href="/">
          <p
            class="text-2xl font-extrabold hover:text-blue-100 transition-colors"
          >
            ARGENTISTA
          </p>
        </a>
      </div>
      <div>
        <ul class="flex gap-2 sm:gap-4">
          {
            navItems.map((item) => (
              <li>
                <a
                  href={item.href}
                  class={`
                    px-4 py-2 rounded-lg font-medium
                    transition-all duration-200
                    hover:bg-blue-500 hover:shadow-md
                    ${
                      currentPath === item.href
                        ? "bg-blue-700 shadow-sm"
                        : "hover:bg-blue-500"
                    }
                  `}
                >
                  {item.label}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </nav>
  <div
    class="relative overflow-hidden text-sm text-white bg-blue-400 h-8 flex items-center"
  >
    <div
      id="ticker"
      class="absolute whitespace-nowrap flex gap-8 px-8 animate-marquee"
    >
      {
        (await fetchDollarPrices()).map((item) => (
          <span class="inline-flex items-center gap-2">
            <strong>{item.nombre}</strong>
            <span>
              ${item.compra?.toFixed(2) ?? "N/A"} / $
              {item.venta?.toFixed(2) ?? "N/A"}
            </span>
          </span>
        ))
      }
      {
        (await fetchDollarPrices()).map((item) => (
          <span class="inline-flex items-center gap-2">
            <strong>{item.nombre}</strong>
            <span>
              ${item.compra?.toFixed(2) ?? "N/A"} / $
              {item.venta?.toFixed(2) ?? "N/A"}
            </span>
          </span>
        ))
      }
    </div>
  </div>
</header>

<style>
  @keyframes marquee {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  .animate-marquee {
    animation: marquee 35s linear infinite;
  }
</style>
